# name: CI/CD Pipeline

# on:
#   push:
#     branches:
#       - main

# jobs:
#   build_and_deploy:
#     runs-on: ubuntu-latest
#     steps:
#       - name: Checkout Code
#         uses: actions/checkout@v3
        
#       - name: Install Node.js
#         uses: actions/setup-node@v3
#         with:
#           node-version: '20.11.1'
          
#       - name: Install Dependencies
#         run: npm install
        
#       - name: Run Tests
#         run: cd ./Client && npm test
        
#       - name: Build Project
#         run: cd ./Client && npm run build
        
#       - name: Deploy to Vercel
#         env:
#           VERCEL_TOKEN: ${{ secrets.VERCEL_TOKEN }}
#         run: |
#           npm install -g vercel
#           vercel --prod --token $VERCEL_TOKEN

name: CI/CD Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    services:
      mongo:
        image: mongo:latest
        ports:
          - 27017:27017
        options: >-
          --health-cmd "mongo --eval 'db.runCommand({ ping: 1 })'"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '20.12.2'

      - name: Install dependencies
        run: |
          cd Client
          npm install
          cd ../Server
          npm install

      - name: Run tests
        run: |
          cd Server
          npm test

      - name: Build client
        run: |
          cd Client
          npm run build

      - name: Deploy to Vercel
        uses: amondnet/vercel-action@v20
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          vercel-args: '--prod'
          working-directory: ./Client
          github-token: ${{ secrets.GITHUB_TOKEN }}